// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RasmusAB.Models;

#nullable disable

namespace RasmusAB.Migrations
{
    [DbContext(typeof(RasmusABContext))]
    [Migration("20230116101036_varukorgensprodukter3")]
    partial class varukorgensprodukter3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RasmusAB.Models.Användare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VarukorgsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Användare");
                });

            modelBuilder.Entity("RasmusAB.Models.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kategorier");
                });

            modelBuilder.Entity("RasmusAB.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Ordrar");
                });

            modelBuilder.Entity("RasmusAB.Models.Produkt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Antal")
                        .HasColumnType("int");

                    b.Property<string>("Färg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pris")
                        .HasColumnType("int");

                    b.Property<int?>("VarukorgId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.HasIndex("VarukorgId");

                    b.ToTable("Produkter");
                });

            modelBuilder.Entity("RasmusAB.Models.Varukorg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AntalProdukter")
                        .HasColumnType("int");

                    b.Property<int>("AnvändarId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnvändarId")
                        .IsUnique();

                    b.ToTable("Varukorgar");
                });

            modelBuilder.Entity("RasmusAB.Models.Produkt", b =>
                {
                    b.HasOne("RasmusAB.Models.Kategori", "Kategori")
                        .WithMany("ProduktLista")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RasmusAB.Models.Varukorg", "Varukorg")
                        .WithMany("VarukorgensProdukter")
                        .HasForeignKey("VarukorgId");

                    b.Navigation("Kategori");

                    b.Navigation("Varukorg");
                });

            modelBuilder.Entity("RasmusAB.Models.Varukorg", b =>
                {
                    b.HasOne("RasmusAB.Models.Användare", "Användare")
                        .WithOne("AnvändareVarukorg")
                        .HasForeignKey("RasmusAB.Models.Varukorg", "AnvändarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Användare");
                });

            modelBuilder.Entity("RasmusAB.Models.Användare", b =>
                {
                    b.Navigation("AnvändareVarukorg")
                        .IsRequired();
                });

            modelBuilder.Entity("RasmusAB.Models.Kategori", b =>
                {
                    b.Navigation("ProduktLista");
                });

            modelBuilder.Entity("RasmusAB.Models.Varukorg", b =>
                {
                    b.Navigation("VarukorgensProdukter");
                });
#pragma warning restore 612, 618
        }
    }
}
